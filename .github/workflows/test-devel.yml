# This file was auto-generated by make_workflows.py.
# Do not edit it manually, modifications will be lost.

jobs:
  build-anope:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-anope-devel
        path: '~/.cache

          ${ github.workspace }/anope

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout Anope
      uses: actions/checkout@v3
      with:
        path: anope
        ref: 2.0.9
        repository: anope/anope
    - name: Build Anope
      run: |
        cd $GITHUB_WORKSPACE/anope/
        cp $GITHUB_WORKSPACE/data/anope/* .
        CFLAGS=-O0 ./Config -quick
        make -C build -j 4
        make -C build install
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-anope.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-anope
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-bahamut:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-bahamut-devel
        path: '~/.cache

          ${ github.workspace }/Bahamut

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout Bahamut
      uses: actions/checkout@v3
      with:
        path: Bahamut
        ref: master
        repository: DALnet/Bahamut
    - name: Build Bahamut
      run: |
        cd $GITHUB_WORKSPACE/Bahamut/
        patch src/s_user.c < $GITHUB_WORKSPACE/patches/bahamut_localhost.patch
        patch src/s_bsd.c < $GITHUB_WORKSPACE/patches/bahamut_mainloop.patch

        # <= v2.2.2
        patch -p1 < $GITHUB_WORKSPACE/patches/bahamut_ubuntu22.patch || true

        echo "#undef THROTTLE_ENABLE" >> include/config.h
        libtoolize --force
        aclocal
        autoheader
        automake --force-missing --add-missing || true
        autoreconf
        ./configure --prefix=$HOME/.local/
        make -j 4
        make install
        mkdir -p $HOME/.local/bin/
        cp $HOME/.local/ircd $HOME/.local/bin/ircd
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-bahamut.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-bahamut
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-hybrid:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-hybrid-devel
        path: '~/.cache

          ${ github.workspace }/ircd-hybrid

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout Hybrid
      uses: actions/checkout@v3
      with:
        path: ircd-hybrid
        ref: 8.2.x
        repository: ircd-hybrid/ircd-hybrid
    - name: Build Hybrid
      run: |
        cd $GITHUB_WORKSPACE/ircd-hybrid/
        ./configure --prefix=$HOME/.local/
        make -j 4
        make install
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-hybrid.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-hybrid
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-inspircd:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout InspIRCd
      uses: actions/checkout@v3
      with:
        path: inspircd
        ref: master
        repository: inspircd/inspircd
    - name: Build InspIRCd
      run: |
        cd $GITHUB_WORKSPACE/inspircd/

        # Insp3 <= 3.16.0 and Insp4 <= 4.0.0a21 don't support -DINSPIRCD_UNLIMITED_MAINLOOP
        patch src/inspircd.cpp < $GITHUB_WORKSPACE/patches/inspircd_mainloop.patch || true

        ./configure --prefix=$HOME/.local/inspircd --development

        CXXFLAGS=-DINSPIRCD_UNLIMITED_MAINLOOP make -j 4
        make install
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-inspircd.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-inspircd
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-ngircd:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-ngircd-devel
        path: '~/.cache

          ${ github.workspace }/ngircd

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout ngircd
      uses: actions/checkout@v3
      with:
        path: ngircd
        ref: master
        repository: ngircd/ngircd
    - name: Build ngircd
      run: |
        cd $GITHUB_WORKSPACE/ngircd
        patch src/ngircd/client.c < $GITHUB_WORKSPACE/patches/ngircd_whowas_delay.patch
        ./autogen.sh
        ./configure --prefix=$HOME/.local/
        make -j 4
        make install
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-ngircd.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-ngircd
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-plexus4:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-plexus4-devel
        path: '~/.cache

          ${ github.workspace }/placeholder

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: clone
      run: 'curl https://gitlab.com/rizon/plexus4/-/archive/master/plexus4-master.tar.gz
        | tar -zx

        mv plexus4* plexus4'
    - name: build
      run: 'cd $GITHUB_WORKSPACE/plexus4

        ./autogen.sh

        ./configure --prefix=$HOME/.local/

        make -j 4

        make install'
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-plexus4.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-plexus4
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-solanum:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-solanum-devel
        path: '~/.cache

          ${ github.workspace }/solanum

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout Solanum
      uses: actions/checkout@v3
      with:
        path: solanum
        ref: main
        repository: solanum-ircd/solanum
    - name: Build Solanum
      run: |
        cd $GITHUB_WORKSPACE/solanum/
        ./autogen.sh
        ./configure --prefix=$HOME/.local/
        make -j 4
        make install
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-solanum.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-solanum
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-unrealircd:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-unrealircd-devel
        path: '~/.cache

          ${ github.workspace }/unrealircd

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout UnrealIRCd 6
      uses: actions/checkout@v3
      with:
        path: unrealircd
        ref: unreal60_dev
        repository: unrealircd/unrealircd
    - name: Build UnrealIRCd 6
      run: |
        cd $GITHUB_WORKSPACE/unrealircd/
        cp $GITHUB_WORKSPACE/data/unreal/* .
        # Need to use a specific -march, because GitHub has inconsistent
        # architectures across workers, which result in random SIGILL with some
        # worker combinations
        sudo apt install libsodium-dev libargon2-dev
        CFLAGS="-O0 -march=x86-64" CXXFLAGS="$CFLAGS" ./Config -quick
        make -j 4
        make install
        # Prevent download of geoIP database on first startup
        sed -i 's/loadmodule "geoip_classic";//' ~/.local/unrealircd/conf/modules.default.conf
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-unrealircd.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-unrealircd
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-unrealircd-5:
    runs-on: ubuntu-22.04
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: 3-${{ runner.os }}-unrealircd-5-devel
        path: '~/.cache

          ${ github.workspace }/unrealircd

          '
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout UnrealIRCd 5
      uses: actions/checkout@v3
      with:
        path: unrealircd
        ref: unreal52
        repository: unrealircd/unrealircd
    - name: Build UnrealIRCd 5
      run: |
        cd $GITHUB_WORKSPACE/unrealircd/
        cp $GITHUB_WORKSPACE/data/unreal/* .
        # Need to use a specific -march, because GitHub has inconsistent
        # architectures across workers, which result in random SIGILL with some
        # worker combinations
        sudo apt install libsodium-dev libargon2-dev
        CFLAGS="-O0 -march=x86-64" CXXFLAGS="$CFLAGS" ./Config -quick
        make -j 4
        make install
        # Prevent download of geoIP database on first startup
        sed -i 's/loadmodule "geoip_classic";//' ~/.local/unrealircd/conf/modules.default.conf
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-unrealircd-5.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v3
      with:
        name: installed-unrealircd-5
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  publish-test-results:
    if: success() || failure()
    name: Publish Dashboard
    needs:
    - test-sable
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - name: Install dashboard dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install defusedxml docutils -r requirements.txt
    - name: Generate dashboard
      run: |-
        shopt -s globstar
        python3 -m irctest.dashboard.format dashboard/ artifacts/**/*.xml
        echo '/ /index.xhtml' > dashboard/_redirects
    - name: Install netlify-cli
      run: npm i -g netlify-cli
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      name: Deploy to Netlify
      run: ./.github/deploy_to_netlify.py
  test-sable:
    needs: []
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Checkout Sable
      uses: actions/checkout@v3
      with:
        path: sable
        ref: master
        repository: Libera-Chat/sable
    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        override: true
        toolchain: nightly
    - run: rustc --version
    - name: Build Sable
      run: |
        cd $GITHUB_WORKSPACE/sable/
        cargo build
        cargo install
    - name: Install system dependencies
      run: sudo apt-get install atheme-services faketime
    - name: Install irctest dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install pytest pytest-xdist -r requirements.txt
    - name: Test with pytest
      run: PYTEST_ARGS='--junit-xml pytest.xml' PATH=$HOME/.local/bin:$PATH  PATH=~/.local//sbin:~/.local//bin:$PATH
        make sable
      timeout-minutes: 30
    - if: always()
      name: Publish results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results_sable_devel
        path: pytest.xml
name: irctest with devel versions
'on':
  schedule:
  - cron: 51 8 * * 6
  - cron: 51 8 * * 0
  - cron: 51 17 * * *
  workflow_dispatch: null
